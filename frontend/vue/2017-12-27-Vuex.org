* Vuesx
  Vuex is a state management pattern + library
  centralized store for all the components in an application

  *store. A "store" is basically a container that holds your application state.*

  Vuex stores are reactive. When Vue components retrieve state from it,
  they will reactively and efficiently update if the store's state changes.

  You cannot directly mutate the store's state. The only way to change a store's state
  is by explicitly committing mutations. This ensures every state change leaves a
  track-able record, and enables tooling that helps us better understand our applications.


  const store = new Vuex.Store({
  state: {
    count: 0
  },
  mutations: {
    increment (state) {
      state.count++
    }
  }
})
// use
store.commit('increment')
console.log(store.state.count) // -> 1

Now, to access the store youâ€™ll either have to import it in all of your components,
or you can inject it into the root Vue instance to have it automatically injected into
every other component in your app as this.$store.

Vuex uses a single state tree - that is, this single object contains all your application level state and serves as the "single source of truth".
