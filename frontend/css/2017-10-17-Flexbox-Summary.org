* Css flexbox总结
** 术语和概念
*** flexbox，flex container，flex items
   flexbox包含flex containers和flex items。
   使用display:flex或display:inline-flex，生成flex container。

   每个flex container的子元素都是flex item。

   *所有在flex container之外的和在flex item之内的展示都不变。*

   flex item都是根据flex line被positioned。flex line只有一条。
   那么下面的元素了？

   通过改变flex line的方向来改变元素的方向。
   chrome中使用direction:rtl，表示right-to-left
*** main axis，cross axis
   有一个横向的主轴main axis，也叫main direct，还有一个cross axis和主轴居中十字交叉。

   然后flex-direction有以下几个属性:
   flex-direction:row 默认的，就是根据主轴main axis，从左到右，从上到下。
   flex-direction:row-reverse 将主轴方向翻转，也就是行翻转，从右到左，从上到下。
   flex-direction:column 将主轴和横轴交换，根据列来排列，从上到下，从左到右
   flex-direction:column-reverse 从下到上，从右到左。

   *main axis并不是一开始就是从中间开始分开上下2边的。*
*** justify-content
    justify-content调整flex item在主轴main axis上的位置。
    有以下5个属性：
    flex-start(default)
    flex-end
    center
    space-between
    比如有3个flex item，头，尾元素顶格，元素之间的距离是一样的。
    spance-around
    头尾元素之间的距离相加，和其他元素距离是一样的，可以看做是一个环形链表？

*** align-items
    和justify-content是互补的，调整在cross axis上的位置。
    flex-start
    flex-end
    center
    baseline
    就是根据内容自动扩展？
    stretch
    沿着cross axis上下扩展。
*** flex-wrap

    看到align-content了。

** 项目的属性
   order
   顺序
   flex-grow
   item扩大
   flex-shrink
   item收缩
   flex-basis

   flex
   align-self

   *align-content：就是在副轴上有多条线（设置为wrap），然后让这些线按照以何种方式排列。*
   https://css-tricks.com/snippets/css/a-guide-to-flexbox/
   看这个网站上的图就很清楚了。

** flexbox tricks
   .parent {
            display: flex;
            height: 300px; /* Or whatever */
    }

    .child {
            width: 100px;  /* Or whatever */
            height: 100px; /* Or whatever */
            margin: auto;
     }
     牛逼啊，使用margin:auto可以自动垂直水平居中。给出的解释是：
     flex容器中的flex items使用margin:auto，可以吸收掉而外的空间。

     flex:1就是让两个item占用一行。
