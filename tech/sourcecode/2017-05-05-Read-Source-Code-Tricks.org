* 阅读源代码技巧
** 草稿
   首先我们借助于工具，比如idea，引入maven依赖之后，可以直接下载源代码。
   第二，信息的封闭性，也就是封装，要好好利用这点，我们看源代码时，可以先看左边的Structure中的代码结构，
   然后那些一眼就懂，或者不关心的东西就略过了。只看自己关心的。这样就达到了利用封装的特性。
   这个和一个项目过来，我们先看有那几个模块，每个模块有哪些包，然后包下有哪些小功能是一样的。我们从自己
   关系的功能开始进行阅读，开发，改造（对，这个和catb介绍的方法一样，从一个需求，功能开始hack）。
   第三，对困惑的不能放过，一定要思考，做笔记。

   带着问题去看源代码？比如一个很感兴趣，很好奇的功能是如何实现的。自己会怎么实现，然后比较别人的实现，
   看看优劣，然后还有些自己不会实现的，看人家是如何实现的。这里要结合wiki，文档来先看看目标，分析过程等。
   我现在看源码，就是无头苍蝇，没什么目标的。所以最终的目标还是做功能，fix bug以此来探索代码。

   其实问题的症结就在于没有将所有的逻辑处理流程串联起来，看的代码什么的都是分散的。
   那么现在的方法，目标就是去找Issues搞定。
