* ADS算法与数据结构
  参考的这个网站:：[[http://btechsmartclass.com/DS/U1_T1.html][Data Structure]] 。

  为什么一定要做笔记了？？？？？
** 学习建议
   学完一个，写测试用例，然后看JDK里面的实现，比较下优劣
** UNIT1
** Introduction to Algorithm
** UNIT2
*** SingleLinkedList
    妈的，最基础的东西都没掌握好。

*** CircularLinkedList

** UNIT3
*** Tree
**** Concepts

     N Nodes with maximum of N-1 Edges.
     Node:every individual element
     Edges:connecting link between two nodes
     Root:the first Node
     Parent:
     Child:
     Siblings:
     Leaf: A node has no child,also called External Nodes,Terminal Nodes.
     Degree: total number of children of a node
     Level:
     Height:
**** Binary Tree
     delete:
为毛要是最小的？
替换以后依然要满足，比左子节点要打，比右边子节点要小。
假设是右边最小，肯定满足比右边子节点要小。
那么肯定比左节点大吗？

*** Graph
**** Concepts
    Weighted Edge - A weighted egde is an edge with cost on it.

    End vertices or Endpoints
    The two vertices joined by an edge are called the end vertices (or endpoints) of the edge.

    Incident
    An edge is said to be incident on a vertex if the vertex is one of the endpoints of that edge.

    Origin
    If an edge is directed, its first endpoint is said to be origin of it.

    Destination
    If an edge is directed, its first endpoint is said to be origin of it and the other endpoint is said to be the destination of the edge.

    Self-loop
    An edge (undirected or directed) is a self-loop if its two endpoints coincide
    应该是说单个顶点的连接弧，就是自身和自身连接。

    Simple Graph
    A graph is said to be simple if there are no parallel and self-loop edges.

    Path
A path is a sequence of alternating vertices and edges that starts at a vertex and ends at a vertex such that each edge is incident to its predecessor and successor vertex.
**** Representation
     Adjacency Matrix 毗邻矩阵
     Incidence Matrix 关联矩阵/入射矩阵
     Adjacency List 领接表

**** Traversal
***** DFS (Depth First Search)
      就是随便走，遇到节点的都走了，就回溯，然后找没访问的入栈

      A有AB,AD,
      B有BA,BC,BE,
      C有CE,CF,CG
      D有DA,DE
      E有EF,EB
      F有FC,FG

      问题的关键在：如何回溯？如何做到，知道D有DA,DE，可以放Map，后面的房List，
      如果D的key对应的Value，List为空，说明都访问到了，那么继续回溯，从stack中pop出E,
      找到E有EB,EC，EF，
** UNIT4
*** Binary Search
    二分查找，只能用在有序的数组中，然后每次查找从中间开始，比较大小，然后左移或者右移动。
** UNIT5
***
** Performance Analysis
