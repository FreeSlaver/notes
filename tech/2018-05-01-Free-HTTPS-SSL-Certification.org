* 免费的HTTPS SSL证书
  Let's Encrypt
  https://letsencrypt.org/
** 正文
   安装Nginx
   yum install epel-release
   yum install nginx

   下载Let's Encrypt SSL
    yum install git
    cd /opt
    git clone https://github.com/letsencrypt/letsencrypt

    为Ngnix生成免费的证书
    用插件完成，必须保证80端口可用，
    cd letsencrypt
    ./letsencrypt-auto certonly --standalone -d your_domain.tld -d www.yourdomain.tld

    为Ngnix安装证书
    证书文件存放放/etc/letsencrypt/lives目录下
    2018-07-31过期，冲洗跑一次letsencrypt-auto命令，或者./letsencrypt-auto renew自动

    vi /etc/nginx/nginx.conf


    重启Ngnix
    systemctl restart nginx
    service nginx restart


    自动化重新生成证书：
    使用crontab -e命令，添加以下内容
    0 0 1 * * /usr/bin/certbot renew --force-renewal
    5 0 1 * * /usr/sbin/service nginx restart
   ACEM协议，
** 参考文章与扩展阅读
   [[https://www.tecmint.com/setup-https-with-lets-encrypt-ssl-certificate-for-nginx-on-centos/][Setting Up HTTPS with Let’s Encrypt SSL Certificate For Nginx on RHEL/CentOS 7/6]]


   server {
    listen 80;
    listen [::]:80;
    server_name data.3gods.com

    return 301 https://$host$request_uri;
}

server {
        listen 443 ssl;
        server_name 域名;
        ssl_certificate /etc/letsencrypt/live/域名/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/域名/privkey.pem;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_dhparam /etc/ssl/certs/dhparam.pem;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_stapling on;
        ssl_stapling_verify on;
        add_header Strict-Transport-Security max-age=15768000;
        # The rest of your server block
        root /path/to/root;
        index index.html index.htm;
        location / {
                try_files $uri $uri/ =404;
        }
}
