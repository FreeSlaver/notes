* kafka todo list
** 10篇以上高质量的博文
   1.kafka分享
   2.
** kafka源码研读

** kafka的架构玩法和其他系统的整合
** jira，stackoverflow上的问题看看

**** describe
     首先要搞的第一点就是通读下源码，这是最先要做的事情，然后笔记什么的都写在这里，后续补充
     schedule
     logmanager
     logManager主要做3件事：日志创建，检索，气你。
     1.定期清理log
     只清理未被压缩的，判断条件是：超过retention time和log size大于retentionSize的
     2.定期刷log
     3.从checkpoint恢复log
     会将当前的目录的recovery point写到纯文本文件中，
     还有一个.lock文件
 * If topic expiry is enabled for the metadata, any topic that has not been used within the expiry interval
 * is removed from the metadata refresh set after an update. Consumers disable topic expiry since they explicitly
 * manage topics while producers rely on topic expiry to limit the refresh set.

Unfinish：NetworkClient，MetadataUpdater


** Kafka wiki概览
   1. Retrospective 回顾，主要是每个版本干了撒，干好了的，没干好的。没撒价值
   2. 一些三方工具
      1.Kafka Connect,哦，好像就是一个和其他系统集成的工具，将数据从其他系统，
比如db等导入到kafka，或者总kafka导出数据到db。
    Ecosystem，主要看这页，里面很多对kafka支持的工具。
   https://cwiki.apache.org/confluence/display/KAFKA/Kafka+Internals
   这个很重要啊。
*** Compression压缩
   对于从数据中心做mirrorMaker进行数据同步作用很大。
   使用ByteBufferMessageSet可以装压缩和未压缩的，使用在消息头中添加一个
   compression属性。
   从kafka的wiki当中学到了很多，特别是一些通用的技能，以后可以长期使用。
   如何contribute code to kafka？
   high quality，well documented clients，documents
   1. 测试用例覆盖;2. 如果引入新特性，最好先开一个wiki，获得一致性决定的设计
   2. 代码风格，3.如果会修改到用户接口，那么先要取的同意，然后修改wiki
   最好，最简单的开发方式就是去找一个JIRA，然后修复问题。
Kafka uses:
JIRA to track logical issues, including bugs and improvements
Kafka Improvement Proposals for planning major changes
Confluence for documentation
Github pull requests to manage the review and merge of specific code changes
