* 终端标签

** 目标
   要做的是：给一个终端，通过经纬度，计算出此终端周围N公里内的所有终端。
   然后给使用这个附近的终端的快递员推送通知，新的终端可用了

   仿造ticketalarm的项目结构，因为有多个数据源。
   将N公里，一级，二级标签作为参数传递进去，（先要看看）

   也就是"attr"这个填写一级标签的那个撒，
   color这个填写2级标签的撒，后面的就是值了。

   我来设计接口的话，数据结构肯定不是这样的。
   我看这个地方我自己来重新设计下，锻炼下自己。

** 标签设计
   不管一级还是二级，本质都是标签，只是有层级关系而已。
   一个标签有哪些属性了？为什么需要2级标签了？？？
   标签名称tagName，多个子标签（最好只记id，反了，应该只记父标签），
   标签id（唯一标示），标签的属性（可能有多个，比如color:red,）
   无关紧要的一些属性创建时间createTime，创建人creator，更新时间updateTime，更新人updator

   表设计：
   id,pid,type?tag_desc,status,tag_key,tag_val，


** 标签接口设计
   1. 终端标签查询，
      只传递一个或多个sn，然后将结果集返回，结果集的数据结构。
      我们首先要想的是传递的51800，51900。

   这接口设计的，肯定是一个最简单的:一个XX添加一个标签，完事。
   然后对N个XX添加一个标签。然后对N个XX添加M个标签。
   然后内部的实现肯定缩小到一个范围，数据结构尽量保持一致。

   {
   //给谁打标签？
   target : {
     type: "postman", //user,terminal
     val: "18025360608"
   },
   tags : [
      lv1Tag1 : {
         lv2Tag1 : Object1,
         lv2Tag2 : Object2
      }，
      lv1Tag2 : {
         lv2Tag1 : Object1,
         lv2Tag2 : Object2
      }
   ],
   timestamp : 2017-07-07 00:00:00
}
//这是一个最简单的，给一个目标打上一个标签。
但是这里有一个很大的问题，就是这个val有多个，但是值都是不一样的。
（关键点在于对N个XX打标签，标签的值不一样！！！）
所以，这个最初的tag的设计有点问题，tag理论上来说只有单一的属性。

要解决这个问题的话，就是要将target和tags映射起来。那么数据结构变成这样了：
     List<Map<Target,List<Tag>>>，然后Tag这个对象也是Map
    或者lv1Tag，List<lv2Tag,lv2TagVal>,
[
   {
   type :"postman",
   val:"18025360608"
   }:{
    [
    lv1Tag1 :{
                    lv2Tag1 : Object1,
                    lv2Tag2 : Object2
                  },
    lv1Tag2 : {
                     lv2Tag1 : Object1,
                     lv2Tag2 : Object2
                   },
    ...
    ]
   },
   ...
]

如果是对多个目标了？可以将val的结构改成["18025360608","17856546"]。这样的。

如果要对多个目标打多种标签？理论上，应该不支持。为嘛？因为现实生活中就没有这样的，或者效率很低。
其实可以映射到现实中很简单的一个问题：我现在要打标签了。给谁打？（target），打什么样的标签（tags）
这样的话，很显然的将事情描述清楚了。

还有好多要做，1。优化，2。改快递员的打标签，改终端附近的打标签。3。还有那个叫什么大数据周转率的标签。
