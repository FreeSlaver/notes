* 程序员超级高效率
** 摘录
   选择最简单的解决方案
   不要让你的雇主逼你学习，自主学习并为自己设定新的目标。

   如果你不知道什么时候应该使用快速排序、不懂辨认O(n2)程序、不会写递归函数，你将无法成为10倍效率的开发者。使用多种语言你才能清楚不同的框架是如何解决相同问题的。尽可能去了解底层命令（plumbing），以便能够作出明智的决定（Web框架是怎么存储session状态的？Cookie到底是什么？）。

   高效开发者喜欢用文本编辑器胜过IDE编辑器，因为这样可以学到更多东西。
   无论什么情况，尽量使用键盘快捷键，因为熟练使用一件工具的前提是熟悉它。

   控制编程时间，给自己一个多姿多彩的生活，劳逸结合能让你在工作时更高效、更愉悦。
   当然，即便是上了年纪的程序员也知道，以最少的时间完成最高效的工作是成为10倍效率开发者的必要条件。

   *作为一个程序员，我觉得在职业生涯中最好的一件事儿就是从电脑前站起来，去拜访那些在某一领域有所建树的人们。*
   重视批评，以包容的态度接受批评并提升自己是非常重要的事情。聪明的人善于从自己的错误中学习，而智慧的人善于从别人的错误中学习。”

   好的程序员花去90%的时间在思考、研究和实验，来找出最优方案。
   差的程序员花去90%的时间在调试问题程序、盲目的修改程序，期望某种写法能可行。

   一个卓越的程序员的效率会是一个普通程序员的20-100倍

*** 培养自己好的重构习惯

    这里讲的重构和代码里的重构大体意思一样，就是不断优化自己的工作环境。Rule 6其实就是一种重构。
    经常问问自己这些问题：
    常用的命令是不是做了alias？比如：总敲 ls -l，是不是应该alias出一个 ll 来？
    常用的服务器信息是否写在了 .ssh/config 里？服务器登录是否使用了pub/private key（毋须输入密码）？
    对于某些操作，可不可以定义一些快捷键（比如说google search）？
    项目里重复的工作是不是写成了makefile（或是其他任务脚本，如rake，jake）？
    常写的代码结构是否定义了snippet？

    到底搞不搞了？我看还是把别的先学好吧。我擦。

** 参考
